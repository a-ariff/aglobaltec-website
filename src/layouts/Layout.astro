---
export interface Props {
  title?: string;
  description?: string;
  image?: string;
  url?: string;
}

// Import CSS files for Astro/Vite bundling
import '../styles/global.css';
import '../styles/theme.css';

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const {
  title = 'Ariff Mohamed - Azure Cloud Solutions Engineer | A Global Tec',
  description = 'Ariff Mohamed - Expert Azure cloud solutions engineer specializing in security, automation, and compliance. Microsoft 365 and Azure cloud solutions, security, and automation services.',
  image = '/og-image.jpg',
  url = canonicalURL
} = Astro.props;
const imageUrl = new URL(image, Astro.site);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageUrl} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={imageUrl} />
    
    <title>{title}</title>
  </head>
  <body>
    <!-- Sticky Top Navigation -->
    <nav class="sticky-nav nav-transparent" id="main-nav">
      <div class="container">
        <div class="flex justify-between items-center" style="padding: var(--space-md) 0;">
          <a class="nav-logo" href="/">
            <span class="icon-placeholder" style="margin-right: var(--space-sm);"></span>
            A Global Tec
          </a>
          
          <ul class="nav-links flex items-center gap-6">
            <li><a class="nav-link" href="/">Home</a></li>
            <li><a class="nav-link" href="/#projects">Projects</a></li>
            <li><a class="nav-link" href="/#about">About</a></li>
            <li><a class="nav-link" href="/#contact">Contact</a></li>
            <li><a class="nav-link" href="https://github.com/a-ariff" target="_blank" rel="noopener noreferrer">GitHub</a></li>
            <li><a class="nav-link" href="https://linkedin.com/in/ariff" target="_blank" rel="noopener noreferrer">LinkedIn</a></li>
          </ul>
        </div>
      </div>
    </nav>
    
    <main>
      <slot />
    </main>
    
    <style>
      .sticky-nav {
        position: sticky;
        top: 0;
        z-index: 1000;
        width: 100%;
        transition: all var(--transition-base);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
      }
      
      .nav-transparent {
        background: rgba(0, 0, 0, 0.1);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      }
      
      .nav-solid {
        background: rgba(0, 0, 0, 0.9);
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      }
      
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 var(--space-lg);
      }
      
      .flex {
        display: flex;
      }
      
      .justify-between {
        justify-content: space-between;
      }
      
      .items-center {
        align-items: center;
      }
      
      .gap-6 {
        gap: 1.5rem;
      }
      
      .nav-logo {
        display: flex;
        align-items: center;
        font-family: var(--font-family-heading);
        font-size: var(--font-size-xl);
        font-weight: var(--font-weight-bold);
        color: var(--text-primary);
        text-decoration: none;
        transition: all var(--transition-base);
      }
      
      .nav-logo:hover {
        color: var(--accent-400);
      }
      
      .nav-links {
        list-style: none;
        margin: 0;
        padding: 0;
      }
      
      .nav-link {
        color: var(--text-secondary);
        text-decoration: none;
        font-family: var(--font-family-base);
        font-weight: var(--font-weight-medium);
        font-size: var(--font-size-sm);
        padding: var(--space-sm) var(--space-md);
        border-radius: var(--radius-md);
        transition: all var(--transition-base);
        position: relative;
      }
      
      .nav-link:hover {
        color: var(--text-primary);
        background: rgba(255, 255, 255, 0.05);
        transform: translateY(-1px);
      }
      
      .nav-link:focus-visible {
        outline: 2px solid var(--accent-500);
        outline-offset: 2px;
      }
      
      /* Mobile navigation */
      @media (max-width: 768px) {
        .nav-links {
          display: none; /* Will be replaced with mobile menu in future */
        }
        
        .nav-logo {
          font-size: var(--font-size-lg);
        }
      }
      
      /* Smooth scrolling */
      html {
        scroll-behavior: smooth;
      }
      
      /* Body styles */
      body {
        font-family: var(--font-family-base);
        background: var(--bg-primary);
        color: var(--text-primary);
        line-height: var(--line-height-normal);
        margin: 0;
      }
      
      /* Main content */
      main {
        min-height: calc(100vh - 80px);
      }
    </style>
    
    <script>
      // Sticky navigation scroll effect
      window.addEventListener('scroll', () => {
        const nav = document.getElementById('main-nav');
        if (window.scrollY > 50) {
          nav?.classList.remove('nav-transparent');
          nav?.classList.add('nav-solid');
        } else {
          nav?.classList.remove('nav-solid');
          nav?.classList.add('nav-transparent');
        }
      });
    </script>
  </body>
</html>
